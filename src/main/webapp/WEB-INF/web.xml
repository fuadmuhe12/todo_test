<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
                             http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!-- 1) Indicate where to load Spring's XML config -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>

    <!-- 2) Load the Spring ContextLoaderListener -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 3) Register your TaskRegistrationServlet using the same class name,
             but the actual instance is created by Spring. 
         -->
    <servlet>
        <servlet-name>TaskRegistrationServlet</servlet-name>
        <servlet-class>com.todo.todo_test.servlets.TaskRegistrationServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>TaskRegistrationServlet</servlet-name>
        <url-pattern>/createTask</url-pattern>
    </servlet-mapping>

    <!-- (Optional) If you want DisplayTasksServlet also to be Spring-managed,
         define a bean for it in applicationContext.xml, remove @WebServlet,
         and do a similar <servlet> / <servlet-mapping> here.
    -->

    <!-- The rest of your web.xml can remain the same -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

</web-app>
